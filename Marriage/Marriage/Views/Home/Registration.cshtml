@model Marriage.Models.Members

@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Home/UserMaster.cshtml";
}

<h2>Registration</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<link href="../../Content/Site.css" rel="stylesheet" type="text/css" />
<link href="../../Content/jquery-ui-1.10.4.css" rel="stylesheet" type="text/css" />
<link href="../../Content/jquery-ui-1.10.4.min.css" rel="stylesheet" type="text/css" />

<script src="../../Scripts/jquery-1.10.2.js" type="text/javascript"></script>
<script src="../../Scripts/jquery-ui-1.10.4.min.js" type="text/javascript"></script>
<script type="text/javascript">

    $(document).ready(function () {
        $("#ddlcountry").change(function () {
            var CountryId = $(this).val();
            $.getJSON("../Home/getStateByCountryId", { countryid: CountryId },
                        function (stateData) {
                            var select = $("#ddlstates");
                            select.empty();
                            select.append($('<option/>', {
                                value: 0,
                                text: "Select State"
                            }));


                            $.each(stateData, function (index, stateData) {
                                select.append($('<option/>', {
                                    value: stateData.Value,
                                    text: stateData.Text
                                }));
                            });
                        });
        });
    });


    $(document).ready(function () {
        $("#dob").datepicker({ dateFormat: "dd/mm/yy" });
    });

    //    $(document).ready(function () {
    //        $("#ddlcountry").change(function () {
    //            var CountryId = $(this).val();

    //            $.ajax({
    //                url: "/Home/getstateByCountryId",
    //                type: "post",
    //                contentType: "Application/json",
    //                data: JSON.stringify({ countryid: CountryId })
    //            })
    //          .done(function (stateData) {
    //              alert("success" + JSON.stringify(stateData));
    //              console.log("count" + stateData.length);
    //              for (var i = 0; i < stateData.length; i++) {
    //                  var country = stateData[i].StateName;
    //                  console.log("State" + country);
    //              }
    //          })

    //          $.getJSON("/Home/getstateByCountryId", { countryid: CountryId },
    //                        function (stateData) {
    //                            var select = $("#ddlstates");
    //                            select.empty();
    //                            select.append($('<option/>', {
    //                                value: 0,
    //                                text: "Select State"
    //                            }));


    //                            $.each(stateData, function (index, stateData) {
    //                                select.append($('<option/>', {
    //                                    value: stateData.Value,
    //                                    text: stateData.Text
    //                                }));
    //                           
    //                        });

    //          .fail(function () {
    //              alert("error");
    //          })
    //          .always(function () {
    //              alert("complete");
    //          });

    //            
    //        });



    $(document).ready(function () {
        $('#updateprofile').click(function () {
            $('form')[0].reset();

        });

        $('#autogenerate').click(function () {
            $.post('@Url.Content("~/Home/GeneratePassword")', function (data) {

                $('#password, #confirmpassword').attr("value", data.password);

            });
        });

    });

       

</script> 


@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    
    <fieldset style="border-style: none">
    <legend>Basic Information</legend>
     <br />
     
    <div class="editor-label">
           Profile Written By :-
        </div>
        <div class="editor-field">
            @Html.RadioButton("writtenby", "1")Self
             @Html.RadioButton("writtenby", "2")Parent
              @Html.RadioButton("writtenby", "3")Family
               @Html.RadioButton("writtenby", "4")Friend
            @Html.ValidationMessageFor(model => model.WrittenBy)
        </div>
        <br />
        
        <div class="editor-label">
           First Name :-
        </div>
        <div class="editor-label">
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
            
        </div>
        

        <div class="editor-label">
           Middle Name :-
        </div>
        <div class="editor-label">
            @Html.EditorFor(model => model.MiddleName)
            @Html.ValidationMessageFor(model => model.MiddleName)
        </div>
       

        <div class="editor-label">
          Last Name :-
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.LastName)
        </div>
        <br />

          <div class="editor-label">
           Display Name :-
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DisplayName)
            @Html.ValidationMessageFor(model => model.DisplayName)
        </div>
        <br />

        <div class="editor-label">
          I am on MarraigeExpress.In For :-
        </div>
        <div class="editor-field">
           @Html.RadioButton("forwaht", "Marriage")Marriage
             @Html.RadioButton("forwaht", "Relationship")ParRelationshipent
              @Html.RadioButton("forwaht", "Just Curious")Just Curious
            @Html.ValidationMessageFor(model => model.forwaht)
        </div>
        <br />

        <div class="editor-label">
            I Would Like to get married :-
        </div>
        <div class="editor-field">
            @Html.RadioButton("timeformarriage", "Soon")Soon
             @Html.RadioButton("timeformarriage", "Within 12 Months")Within 12 Months
              @Html.RadioButton("timeformarriage", "NO Fixed Time")NO Fixed Time
            @Html.ValidationMessageFor(model => model.TimeforMarriage)
        </div>
        <br />

        <div class="editor-label">
           Gender :-
        </div>
        <div class="editor-field">
            @Html.RadioButton("gender", "Male")Male
            @Html.RadioButton("gender", "Female")Female
            @Html.ValidationMessageFor(model => model.Gender)
        </div>
        <br />

        <div class="editor-label">
           Marital Status :-
        </div>
        <div class="editor-field">
            @Html.RadioButton("maritalstatus", "1")Singles
             @Html.RadioButton("maritalstatus", "2")Divorced
              @Html.RadioButton("maritalstatus", "3")Windowed
               @Html.RadioButton("maritalstatus", "4")Separated
            @Html.ValidationMessageFor(model => model.MaritalStatus)
        </div>
        <br />

        <div class="editor-label">
           Date Of Birth :-
        </div>
        <div class="editor-field">
           @Html.EditorFor(model => model.DOB, new { @Class = "dob" })
            @Html.ValidationMessageFor(model => model.DOB)
        </div>
        <br />

        <div class="editor-label">
           Time Of Birth :-
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TOB)
            @Html.ValidationMessageFor(model => model.TOB)
        </div>
        <br />

         <div class="editor-label">
            My height is :-
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Height, (SelectList)ViewData["height"], "Select Height")
            @Html.ValidationMessageFor(model => model.Height)
        </div>
        <br />

        <div class="editor-label">
           My weight is :-
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Weight, (SelectList)ViewData["weight"], "Select Weight")
            @Html.ValidationMessageFor(model => model.Weight)
        </div>
        <br />
    
     </fieldset>
        
        <fieldset style="border-style: none">
        <legend>Religion & Culture Details</legend>
         <br />
        
          <div class="editor-label">
           Religion :-
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Religion, (SelectList)ViewData["religion"], "Select Religion")
            @Html.ValidationMessageFor(model => model.Religion)
        </div>
        <br />

        <div class="editor-label">
            Manglik :-
        </div>
        <div class="editor-field">
           @Html.RadioButton("manglik", "Yes")Yes
           @Html.RadioButton("manglik", "No")No
           @Html.RadioButton("manglik", "Don't Know")Don't Know
            @Html.ValidationMessageFor(model => model.Manglik)
        </div>
        <br />

        <div class="editor-label">
           Culture :-
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Culture, (SelectList)ViewData["culture"], "Select Culture")
            @Html.ValidationMessageFor(model => model.Culture)
        </div>
        <br />

        <div class="editor-label">
          Language :-
        </div>
        <div class="editor-field">
           @Html.RadioButton("language", "1")English
           @Html.RadioButton("language", "2")Hindi
           @Html.RadioButton("language", "3")Marathi
            @Html.ValidationMessageFor(model => model.Language)
        </div>
        <br />

        <div class="editor-label">
           Lifestyle :-
        </div>
        <div class="editor-field">
            @Html.RadioButton("lifestyle", "Liberal")Liberal
           @Html.RadioButton("lifestyle", "Modem")Modem
           @Html.RadioButton("lifestyle", "Traditional")Traditional
           @Html.RadioButton("lifestyle", "Will Tell You Later")Will Tell You Later
            @Html.ValidationMessageFor(model => model.Lifestyle)
        </div>
        <br />
        
        </fieldset>
        
    
    <fieldset style="border-style: none">
    <legend>Education & Career</legend>
     <br />

     <div class="editor-label">
            Last Degree :-
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.LastDegree, (SelectList)ViewData["education"], "Select Education")
            @Html.ValidationMessageFor(model => model.LastDegree)
        </div>
        <br />

        <div class="editor-label">
           Profession :-
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Profession, (SelectList)ViewData["occuption"], "Select Occuption")
            @Html.ValidationMessageFor(model => model.Profession)
        </div>
        <br />

         <div class="editor-label">
           Annual income :-
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.AnnualIncome, (SelectList)ViewData["income"], "Select Income")
            @Html.ValidationMessageFor(model => model.AnnualIncome)
        </div>
        <br />
    </fieldset>

      <fieldset style="border-style: none">
      <legend>Location</legend>
       <br />
      
       <div class="editor-label">
           I live in :-
        </div>
        <div class="editor-field">

            @Html.DropDownListFor(Model => Model.CountryCode, new SelectList(ViewBag.country as System.Collections.IEnumerable, "CountryID", "CountryCode"),
"Select country", new { id = "ddlcountry" })

            @Html.ValidationMessageFor(model => model.CountryCode)
        </div>
        <br />

        <div class="editor-label">
          State Province :-
        </div>
        <div class="editor-field">
           @Html.DropDownListFor(Model => Model.State, new SelectList(Enumerable.Empty<SelectListItem>(), "StateID", "StateName"),
          "Select state", new { id = "ddlstates" })
            @Html.ValidationMessageFor(model => model.State)
        </div>
        <br />

        <div class="editor-label">
           City :-
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.City)
            @Html.ValidationMessageFor(model => model.City)
        </div>
        <br />

        <div class="editor-label">
           Address :-
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address1)
            @Html.ValidationMessageFor(model => model.Address1)
        </div>
        <br />

        
        <div class="editor-label">
            I have :-
        </div>
        <div class="editor-field">
            @Html.RadioButton("ihave", "Citizenship")Citizenship
             @Html.RadioButton("ihave", "Legal Permanent Residence")Legal Permanent Residence
              @Html.RadioButton("ihave", "Work Visa")Work Visa
               @Html.RadioButton("ihave", "Student Visa")Student Visa
               @Html.RadioButton("ihave", "Visit Visa")Visit Visa
            @Html.ValidationMessageFor(model => model.Ihave)
        </div>
        <br />

         <div class="editor-label">
           Nationality :-
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Nationality, (SelectList)ViewData["nationality"], "Select Nationality")
            @Html.ValidationMessageFor(model => model.Nationality)
        </div>
        <br />

        <div class="editor-label">
            Passport :-
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Password, (SelectList)ViewData["passport"], "Select Passport")
            @Html.ValidationMessageFor(model => model.Password)
        </div>
        <br />

      </fieldset>
    
    <fieldset style="border-style: none">
    <legend>Family Details</legend>
     <br />
    
     <div class="editor-label">
          I live with :-
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LivingWith)
            @Html.ValidationMessageFor(model => model.LivingWith)
        </div>
        <br />

        <div class="editor-label">
            Father alive? :-
        </div>
        <div class="editor-field">
            @Html.RadioButton("fatheralive", "Yes")Yes
            @Html.RadioButton("fatheralive", "No")No
            @Html.ValidationMessageFor(model => model.FatherAlive)
        </div>
        <br />

        <div class="editor-label">
          Mother alive? :-
        </div>
        <div class="editor-field">
            @Html.RadioButton("motheralive", "Yes")Yes
            @Html.RadioButton("motheralive", "No")No
            @Html.ValidationMessageFor(model => model.MotherAlive)
        </div>
        <br />

         <div class="editor-label">
           Brother :-
        </div>
        <div class="editor-label">
            @Html.EditorFor(model => model.UnmarriedBrother)
            @Html.ValidationMessageFor(model => model.UnmarriedBrother)
        </div>
       


        <div class="editor-label">
           Married:-
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MarriedBrother)
            @Html.ValidationMessageFor(model => model.MarriedBrother)
        </div>
        <br />

       
        <div class="editor-label">
            Sister :-
        </div>
        <div class="editor-label">
            @Html.EditorFor(model => model.UnmarredSister)
            @Html.ValidationMessageFor(model => model.UnmarredSister)
        </div>
       
        <div class="editor-label">
            Married:-
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MarriedSister)
            @Html.ValidationMessageFor(model => model.MarriedSister)
        </div>
        <br />

        <div class="editor-label">
            Family status :-
        </div>
        <div class="editor-field">
           @Html.RadioButton("familystatus", "1")Rich
            @Html.RadioButton("familystatus", "2")Upper Middle Class
             @Html.RadioButton("familystatus", "3")Middle Class
            @Html.ValidationMessageFor(model => model.FamilyStatus)
        </div>
        <br />

    </fieldset>
    
    <fieldset style="border-style: none">
    <legend>Contact By Phone</legend>
     <br />

      <div class="editor-label">
           I want to display my contact :-
        </div>
        <div class="editor-field">
            @Html.RadioButton("issecured", "1")Protected
            @Html.RadioButton("issecured", "2")Public
            @Html.ValidationMessageFor(model => model.Issecured)
        </div>
        <br />

         <div class="editor-label">
            Email ID :-
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>
        <br />

         <div class="editor-label">
           Suitable time to call me/us at :-
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TimeForCall)
            @Html.ValidationMessageFor(model => model.TimeForCall)
        </div>
        <br />

         <div class="editor-label">
          Contact No :-
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactNo)
            @Html.ValidationMessageFor(model => model.ContactNo)
        </div>
        <br />

         <div class="editor-label">
            Persons to contact :-
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PersonToContact)
            @Html.ValidationMessageFor(model => model.PersonToContact)
        </div>
        <br />

    </fieldset>
       

        @*<div class="editor-label">
            @Html.LabelFor(model => model.bornin)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.bornin)
            @Html.ValidationMessageFor(model => model.bornin)
        </div>
        <br />*@

       @* <div class="editor-label">
            @Html.LabelFor(model => model.growupin)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.growupin)
            @Html.ValidationMessageFor(model => model.growupin)
        </div>
        <br />*@


        @*<div class="editor-label">
            @Html.LabelFor(model => model.relocatable)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.relocatable)
            @Html.ValidationMessageFor(model => model.relocatable)
        </div>
        <br />*@

       

       

       @* <div class="editor-label">
            @Html.LabelFor(model => model.built)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.built)
            @Html.ValidationMessageFor(model => model.built)
        </div>
        <br />*@

        @*<div class="editor-label">
            @Html.LabelFor(model => model.complexion)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.complexion)
            @Html.ValidationMessageFor(model => model.complexion)
        </div>
        <br />*@

        @*<div class="editor-label">
            @Html.LabelFor(model => model.eyecolor)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.eyecolor)
            @Html.ValidationMessageFor(model => model.eyecolor)
        </div>
        <br />

        <div class="editor-label">
            @Html.LabelFor(model => model.haircolor)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.haircolor)
            @Html.ValidationMessageFor(model => model.haircolor)
        </div>
        <br />

        <div class="editor-label">
            @Html.LabelFor(model => model.food)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.food)
            @Html.ValidationMessageFor(model => model.food)
        </div>
        <br />

        <div class="editor-label">
            @Html.LabelFor(model => model.candrink)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.candrink)
            @Html.ValidationMessageFor(model => model.candrink)
        </div>
        <br />

        <div class="editor-label">
            @Html.LabelFor(model => model.cansmoke)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.cansmoke)
            @Html.ValidationMessageFor(model => model.cansmoke)
        </div>
        <br />*@

      

        <div class="editor-label">
            @Html.LabelFor(model => model.Randomno)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Randomno)
            @Html.ValidationMessageFor(model => model.Randomno)
        </div>
        <br />

        <div class="editor-label">
            @Html.LabelFor(model => model.VerifiCationCode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.VerifiCationCode)
            @Html.ValidationMessageFor(model => model.VerifiCationCode)
        </div>
        <br />

       

       @* <div class="editor-label">
            @Html.LabelFor(model => model.isactive)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.isactive)
            @Html.ValidationMessageFor(model => model.isactive)
        </div>
        <br />

        <div class="editor-label">
            @Html.LabelFor(model => model.isdeleted)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.isdeleted)
            @Html.ValidationMessageFor(model => model.isdeleted)
        </div>
        <br />*@

        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div>
        <br />
   @* <p>
    <input type="button" id="autogenerate" value="Genrate" />
    </p>*@
    <div class="editor-label">
            Genratepassword
        </div>
        <div class="editor-field">
            @Html.TextBox("Autogenrate", null, new { @id = "confirmpassword", onclick = "autogenerate" })
            
        </div>
        <br />
    

        <div class="editor-label">
            @Html.LabelFor(model => model.IsMobileVerified)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsMobileVerified)
            @Html.ValidationMessageFor(model => model.IsMobileVerified)
        </div>
    
   
        <br />

        <p>
            <input type="submit" value="Save"/>
        </p>
   
}


